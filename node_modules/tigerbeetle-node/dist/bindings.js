"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Operation = exports.CreateTransferError = exports.CreateAccountError = exports.QueryFilterFlags = exports.AccountFilterFlags = exports.TransferFlags = exports.AccountFlags = void 0;
var AccountFlags;
(function (AccountFlags) {
    AccountFlags[AccountFlags["none"] = 0] = "none";
    AccountFlags[AccountFlags["linked"] = 1] = "linked";
    AccountFlags[AccountFlags["debits_must_not_exceed_credits"] = 2] = "debits_must_not_exceed_credits";
    AccountFlags[AccountFlags["credits_must_not_exceed_debits"] = 4] = "credits_must_not_exceed_debits";
    AccountFlags[AccountFlags["history"] = 8] = "history";
    AccountFlags[AccountFlags["imported"] = 16] = "imported";
    AccountFlags[AccountFlags["closed"] = 32] = "closed";
})(AccountFlags = exports.AccountFlags || (exports.AccountFlags = {}));
var TransferFlags;
(function (TransferFlags) {
    TransferFlags[TransferFlags["none"] = 0] = "none";
    TransferFlags[TransferFlags["linked"] = 1] = "linked";
    TransferFlags[TransferFlags["pending"] = 2] = "pending";
    TransferFlags[TransferFlags["post_pending_transfer"] = 4] = "post_pending_transfer";
    TransferFlags[TransferFlags["void_pending_transfer"] = 8] = "void_pending_transfer";
    TransferFlags[TransferFlags["balancing_debit"] = 16] = "balancing_debit";
    TransferFlags[TransferFlags["balancing_credit"] = 32] = "balancing_credit";
    TransferFlags[TransferFlags["closing_debit"] = 64] = "closing_debit";
    TransferFlags[TransferFlags["closing_credit"] = 128] = "closing_credit";
    TransferFlags[TransferFlags["imported"] = 256] = "imported";
})(TransferFlags = exports.TransferFlags || (exports.TransferFlags = {}));
var AccountFilterFlags;
(function (AccountFilterFlags) {
    AccountFilterFlags[AccountFilterFlags["none"] = 0] = "none";
    AccountFilterFlags[AccountFilterFlags["debits"] = 1] = "debits";
    AccountFilterFlags[AccountFilterFlags["credits"] = 2] = "credits";
    AccountFilterFlags[AccountFilterFlags["reversed"] = 4] = "reversed";
})(AccountFilterFlags = exports.AccountFilterFlags || (exports.AccountFilterFlags = {}));
var QueryFilterFlags;
(function (QueryFilterFlags) {
    QueryFilterFlags[QueryFilterFlags["none"] = 0] = "none";
    QueryFilterFlags[QueryFilterFlags["reversed"] = 1] = "reversed";
})(QueryFilterFlags = exports.QueryFilterFlags || (exports.QueryFilterFlags = {}));
var CreateAccountError;
(function (CreateAccountError) {
    CreateAccountError[CreateAccountError["ok"] = 0] = "ok";
    CreateAccountError[CreateAccountError["linked_event_failed"] = 1] = "linked_event_failed";
    CreateAccountError[CreateAccountError["linked_event_chain_open"] = 2] = "linked_event_chain_open";
    CreateAccountError[CreateAccountError["imported_event_expected"] = 22] = "imported_event_expected";
    CreateAccountError[CreateAccountError["imported_event_not_expected"] = 23] = "imported_event_not_expected";
    CreateAccountError[CreateAccountError["timestamp_must_be_zero"] = 3] = "timestamp_must_be_zero";
    CreateAccountError[CreateAccountError["imported_event_timestamp_out_of_range"] = 24] = "imported_event_timestamp_out_of_range";
    CreateAccountError[CreateAccountError["imported_event_timestamp_must_not_advance"] = 25] = "imported_event_timestamp_must_not_advance";
    CreateAccountError[CreateAccountError["reserved_field"] = 4] = "reserved_field";
    CreateAccountError[CreateAccountError["reserved_flag"] = 5] = "reserved_flag";
    CreateAccountError[CreateAccountError["id_must_not_be_zero"] = 6] = "id_must_not_be_zero";
    CreateAccountError[CreateAccountError["id_must_not_be_int_max"] = 7] = "id_must_not_be_int_max";
    CreateAccountError[CreateAccountError["exists_with_different_flags"] = 15] = "exists_with_different_flags";
    CreateAccountError[CreateAccountError["exists_with_different_user_data_128"] = 16] = "exists_with_different_user_data_128";
    CreateAccountError[CreateAccountError["exists_with_different_user_data_64"] = 17] = "exists_with_different_user_data_64";
    CreateAccountError[CreateAccountError["exists_with_different_user_data_32"] = 18] = "exists_with_different_user_data_32";
    CreateAccountError[CreateAccountError["exists_with_different_ledger"] = 19] = "exists_with_different_ledger";
    CreateAccountError[CreateAccountError["exists_with_different_code"] = 20] = "exists_with_different_code";
    CreateAccountError[CreateAccountError["exists"] = 21] = "exists";
    CreateAccountError[CreateAccountError["flags_are_mutually_exclusive"] = 8] = "flags_are_mutually_exclusive";
    CreateAccountError[CreateAccountError["debits_pending_must_be_zero"] = 9] = "debits_pending_must_be_zero";
    CreateAccountError[CreateAccountError["debits_posted_must_be_zero"] = 10] = "debits_posted_must_be_zero";
    CreateAccountError[CreateAccountError["credits_pending_must_be_zero"] = 11] = "credits_pending_must_be_zero";
    CreateAccountError[CreateAccountError["credits_posted_must_be_zero"] = 12] = "credits_posted_must_be_zero";
    CreateAccountError[CreateAccountError["ledger_must_not_be_zero"] = 13] = "ledger_must_not_be_zero";
    CreateAccountError[CreateAccountError["code_must_not_be_zero"] = 14] = "code_must_not_be_zero";
    CreateAccountError[CreateAccountError["imported_event_timestamp_must_not_regress"] = 26] = "imported_event_timestamp_must_not_regress";
})(CreateAccountError = exports.CreateAccountError || (exports.CreateAccountError = {}));
var CreateTransferError;
(function (CreateTransferError) {
    CreateTransferError[CreateTransferError["ok"] = 0] = "ok";
    CreateTransferError[CreateTransferError["linked_event_failed"] = 1] = "linked_event_failed";
    CreateTransferError[CreateTransferError["linked_event_chain_open"] = 2] = "linked_event_chain_open";
    CreateTransferError[CreateTransferError["imported_event_expected"] = 56] = "imported_event_expected";
    CreateTransferError[CreateTransferError["imported_event_not_expected"] = 57] = "imported_event_not_expected";
    CreateTransferError[CreateTransferError["timestamp_must_be_zero"] = 3] = "timestamp_must_be_zero";
    CreateTransferError[CreateTransferError["imported_event_timestamp_out_of_range"] = 58] = "imported_event_timestamp_out_of_range";
    CreateTransferError[CreateTransferError["imported_event_timestamp_must_not_advance"] = 59] = "imported_event_timestamp_must_not_advance";
    CreateTransferError[CreateTransferError["reserved_flag"] = 4] = "reserved_flag";
    CreateTransferError[CreateTransferError["id_must_not_be_zero"] = 5] = "id_must_not_be_zero";
    CreateTransferError[CreateTransferError["id_must_not_be_int_max"] = 6] = "id_must_not_be_int_max";
    CreateTransferError[CreateTransferError["exists_with_different_flags"] = 36] = "exists_with_different_flags";
    CreateTransferError[CreateTransferError["exists_with_different_pending_id"] = 40] = "exists_with_different_pending_id";
    CreateTransferError[CreateTransferError["exists_with_different_timeout"] = 44] = "exists_with_different_timeout";
    CreateTransferError[CreateTransferError["exists_with_different_debit_account_id"] = 37] = "exists_with_different_debit_account_id";
    CreateTransferError[CreateTransferError["exists_with_different_credit_account_id"] = 38] = "exists_with_different_credit_account_id";
    CreateTransferError[CreateTransferError["exists_with_different_amount"] = 39] = "exists_with_different_amount";
    CreateTransferError[CreateTransferError["exists_with_different_user_data_128"] = 41] = "exists_with_different_user_data_128";
    CreateTransferError[CreateTransferError["exists_with_different_user_data_64"] = 42] = "exists_with_different_user_data_64";
    CreateTransferError[CreateTransferError["exists_with_different_user_data_32"] = 43] = "exists_with_different_user_data_32";
    CreateTransferError[CreateTransferError["exists_with_different_ledger"] = 67] = "exists_with_different_ledger";
    CreateTransferError[CreateTransferError["exists_with_different_code"] = 45] = "exists_with_different_code";
    CreateTransferError[CreateTransferError["exists"] = 46] = "exists";
    CreateTransferError[CreateTransferError["id_already_failed"] = 68] = "id_already_failed";
    CreateTransferError[CreateTransferError["flags_are_mutually_exclusive"] = 7] = "flags_are_mutually_exclusive";
    CreateTransferError[CreateTransferError["debit_account_id_must_not_be_zero"] = 8] = "debit_account_id_must_not_be_zero";
    CreateTransferError[CreateTransferError["debit_account_id_must_not_be_int_max"] = 9] = "debit_account_id_must_not_be_int_max";
    CreateTransferError[CreateTransferError["credit_account_id_must_not_be_zero"] = 10] = "credit_account_id_must_not_be_zero";
    CreateTransferError[CreateTransferError["credit_account_id_must_not_be_int_max"] = 11] = "credit_account_id_must_not_be_int_max";
    CreateTransferError[CreateTransferError["accounts_must_be_different"] = 12] = "accounts_must_be_different";
    CreateTransferError[CreateTransferError["pending_id_must_be_zero"] = 13] = "pending_id_must_be_zero";
    CreateTransferError[CreateTransferError["pending_id_must_not_be_zero"] = 14] = "pending_id_must_not_be_zero";
    CreateTransferError[CreateTransferError["pending_id_must_not_be_int_max"] = 15] = "pending_id_must_not_be_int_max";
    CreateTransferError[CreateTransferError["pending_id_must_be_different"] = 16] = "pending_id_must_be_different";
    CreateTransferError[CreateTransferError["timeout_reserved_for_pending_transfer"] = 17] = "timeout_reserved_for_pending_transfer";
    CreateTransferError[CreateTransferError["closing_transfer_must_be_pending"] = 64] = "closing_transfer_must_be_pending";
    CreateTransferError[CreateTransferError["amount_must_not_be_zero"] = 18] = "amount_must_not_be_zero";
    CreateTransferError[CreateTransferError["ledger_must_not_be_zero"] = 19] = "ledger_must_not_be_zero";
    CreateTransferError[CreateTransferError["code_must_not_be_zero"] = 20] = "code_must_not_be_zero";
    CreateTransferError[CreateTransferError["debit_account_not_found"] = 21] = "debit_account_not_found";
    CreateTransferError[CreateTransferError["credit_account_not_found"] = 22] = "credit_account_not_found";
    CreateTransferError[CreateTransferError["accounts_must_have_the_same_ledger"] = 23] = "accounts_must_have_the_same_ledger";
    CreateTransferError[CreateTransferError["transfer_must_have_the_same_ledger_as_accounts"] = 24] = "transfer_must_have_the_same_ledger_as_accounts";
    CreateTransferError[CreateTransferError["pending_transfer_not_found"] = 25] = "pending_transfer_not_found";
    CreateTransferError[CreateTransferError["pending_transfer_not_pending"] = 26] = "pending_transfer_not_pending";
    CreateTransferError[CreateTransferError["pending_transfer_has_different_debit_account_id"] = 27] = "pending_transfer_has_different_debit_account_id";
    CreateTransferError[CreateTransferError["pending_transfer_has_different_credit_account_id"] = 28] = "pending_transfer_has_different_credit_account_id";
    CreateTransferError[CreateTransferError["pending_transfer_has_different_ledger"] = 29] = "pending_transfer_has_different_ledger";
    CreateTransferError[CreateTransferError["pending_transfer_has_different_code"] = 30] = "pending_transfer_has_different_code";
    CreateTransferError[CreateTransferError["exceeds_pending_transfer_amount"] = 31] = "exceeds_pending_transfer_amount";
    CreateTransferError[CreateTransferError["pending_transfer_has_different_amount"] = 32] = "pending_transfer_has_different_amount";
    CreateTransferError[CreateTransferError["pending_transfer_already_posted"] = 33] = "pending_transfer_already_posted";
    CreateTransferError[CreateTransferError["pending_transfer_already_voided"] = 34] = "pending_transfer_already_voided";
    CreateTransferError[CreateTransferError["pending_transfer_expired"] = 35] = "pending_transfer_expired";
    CreateTransferError[CreateTransferError["imported_event_timestamp_must_not_regress"] = 60] = "imported_event_timestamp_must_not_regress";
    CreateTransferError[CreateTransferError["imported_event_timestamp_must_postdate_debit_account"] = 61] = "imported_event_timestamp_must_postdate_debit_account";
    CreateTransferError[CreateTransferError["imported_event_timestamp_must_postdate_credit_account"] = 62] = "imported_event_timestamp_must_postdate_credit_account";
    CreateTransferError[CreateTransferError["imported_event_timeout_must_be_zero"] = 63] = "imported_event_timeout_must_be_zero";
    CreateTransferError[CreateTransferError["debit_account_already_closed"] = 65] = "debit_account_already_closed";
    CreateTransferError[CreateTransferError["credit_account_already_closed"] = 66] = "credit_account_already_closed";
    CreateTransferError[CreateTransferError["overflows_debits_pending"] = 47] = "overflows_debits_pending";
    CreateTransferError[CreateTransferError["overflows_credits_pending"] = 48] = "overflows_credits_pending";
    CreateTransferError[CreateTransferError["overflows_debits_posted"] = 49] = "overflows_debits_posted";
    CreateTransferError[CreateTransferError["overflows_credits_posted"] = 50] = "overflows_credits_posted";
    CreateTransferError[CreateTransferError["overflows_debits"] = 51] = "overflows_debits";
    CreateTransferError[CreateTransferError["overflows_credits"] = 52] = "overflows_credits";
    CreateTransferError[CreateTransferError["overflows_timeout"] = 53] = "overflows_timeout";
    CreateTransferError[CreateTransferError["exceeds_credits"] = 54] = "exceeds_credits";
    CreateTransferError[CreateTransferError["exceeds_debits"] = 55] = "exceeds_debits";
})(CreateTransferError = exports.CreateTransferError || (exports.CreateTransferError = {}));
var Operation;
(function (Operation) {
    Operation[Operation["pulse"] = 128] = "pulse";
    Operation[Operation["create_accounts"] = 129] = "create_accounts";
    Operation[Operation["create_transfers"] = 130] = "create_transfers";
    Operation[Operation["lookup_accounts"] = 131] = "lookup_accounts";
    Operation[Operation["lookup_transfers"] = 132] = "lookup_transfers";
    Operation[Operation["get_account_transfers"] = 133] = "get_account_transfers";
    Operation[Operation["get_account_balances"] = 134] = "get_account_balances";
    Operation[Operation["query_accounts"] = 135] = "query_accounts";
    Operation[Operation["query_transfers"] = 136] = "query_transfers";
})(Operation = exports.Operation || (exports.Operation = {}));
//# sourceMappingURL=bindings.js.map